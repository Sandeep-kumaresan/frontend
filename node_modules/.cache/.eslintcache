[{"D:\\try\\final\\Social media\\project\\client\\src\\index.js":"1","D:\\try\\final\\Social media\\project\\client\\src\\App.js":"2","D:\\try\\final\\Social media\\project\\client\\src\\store\\ReduxStore.js":"3","D:\\try\\final\\Social media\\project\\client\\src\\pages\\Home.jsx":"4","D:\\try\\final\\Social media\\project\\client\\src\\pages\\Auth\\Auth.jsx":"5","D:\\try\\final\\Social media\\project\\client\\src\\pages\\Chat\\Chat.jsx":"6","D:\\try\\final\\Social media\\project\\client\\src\\pages\\Profile\\Profile.jsx":"7","D:\\try\\final\\Social media\\project\\client\\src\\reducers\\index.js":"8","D:\\try\\final\\Social media\\project\\client\\src\\actions\\AuthActions.js":"9","D:\\try\\final\\Social media\\project\\client\\src\\api\\ChatRequests.js":"10","D:\\try\\final\\Social media\\project\\client\\src\\reducers\\PostReducer.js":"11","D:\\try\\final\\Social media\\project\\client\\src\\reducers\\AuthReducer.js":"12","D:\\try\\final\\Social media\\project\\client\\src\\reducers\\ChatUserReducer.js":"13","D:\\try\\final\\Social media\\project\\client\\src\\components\\profileSide\\ProfileSide.jsx":"14","D:\\try\\final\\Social media\\project\\client\\src\\components\\PostSide\\PostSide.jsx":"15","D:\\try\\final\\Social media\\project\\client\\src\\components\\NavIcons\\NavIcons.jsx":"16","D:\\try\\final\\Social media\\project\\client\\src\\components\\RightSide\\RightSide.jsx":"17","D:\\try\\final\\Social media\\project\\client\\src\\components\\Coversation\\Conversation.jsx":"18","D:\\try\\final\\Social media\\project\\client\\src\\components\\ChatBox\\ChatBox.jsx":"19","D:\\try\\final\\Social media\\project\\client\\src\\components\\ProfileCard\\ProfileCard.jsx":"20","D:\\try\\final\\Social media\\project\\client\\src\\components\\LogoSearch\\LogoSearch.jsx":"21","D:\\try\\final\\Social media\\project\\client\\src\\components\\ProfileLeft\\ProfileLeft.jsx":"22","D:\\try\\final\\Social media\\project\\client\\src\\api\\AuthRequests.js":"23","D:\\try\\final\\Social media\\project\\client\\src\\api\\UserRequests.js":"24","D:\\try\\final\\Social media\\project\\client\\src\\api\\MessageRequests.js":"25","D:\\try\\final\\Social media\\project\\client\\src\\components\\TrendCard\\TrendCard.jsx":"26","D:\\try\\final\\Social media\\project\\client\\src\\components\\FollowersCard\\FollowersCard.jsx":"27","D:\\try\\final\\Social media\\project\\client\\src\\components\\Posts\\Posts.jsx":"28","D:\\try\\final\\Social media\\project\\client\\src\\components\\ShareModal\\ShareModal.jsx":"29","D:\\try\\final\\Social media\\project\\client\\src\\components\\PostShare\\PostShare.jsx":"30","D:\\try\\final\\Social media\\project\\client\\src\\components\\InfoCard\\InfoCard.jsx":"31","D:\\try\\final\\Social media\\project\\client\\src\\actions\\PostsAction.js":"32","D:\\try\\final\\Social media\\project\\client\\src\\Data\\TrendData.js":"33","D:\\try\\final\\Social media\\project\\client\\src\\actions\\UploadAction.js":"34","D:\\try\\final\\Social media\\project\\client\\src\\components\\FollowersModal\\FollowersModal.jsx":"35","D:\\try\\final\\Social media\\project\\client\\src\\components\\User\\User.jsx":"36","D:\\try\\final\\Social media\\project\\client\\src\\components\\Post\\Post.jsx":"37","D:\\try\\final\\Social media\\project\\client\\src\\components\\ProfileModal\\ProfileModal.jsx":"38","D:\\try\\final\\Social media\\project\\client\\src\\api\\PostsRequests.js":"39","D:\\try\\final\\Social media\\project\\client\\src\\api\\UploadRequest.js":"40","D:\\try\\final\\Social media\\project\\client\\src\\actions\\UserAction.js":"41"},{"size":750,"mtime":1655441254000,"results":"42","hashOfConfig":"43"},{"size":1557,"mtime":1655441254000,"results":"44","hashOfConfig":"43"},{"size":949,"mtime":1655441254000,"results":"45","hashOfConfig":"43"},{"size":388,"mtime":1655441254000,"results":"46","hashOfConfig":"43"},{"size":4378,"mtime":1714222488793,"results":"47","hashOfConfig":"43"},{"size":3085,"mtime":1655441254000,"results":"48","hashOfConfig":"43"},{"size":576,"mtime":1655441254000,"results":"49","hashOfConfig":"43"},{"size":249,"mtime":1655441254000,"results":"50","hashOfConfig":"43"},{"size":826,"mtime":1655441254000,"results":"51","hashOfConfig":"43"},{"size":313,"mtime":1724398102741,"results":"52","hashOfConfig":"43"},{"size":833,"mtime":1655441254000,"results":"53","hashOfConfig":"43"},{"size":1447,"mtime":1655441254000,"results":"54","hashOfConfig":"43"},{"size":316,"mtime":1655441254000,"results":"55","hashOfConfig":"43"},{"size":426,"mtime":1655441254000,"results":"56","hashOfConfig":"43"},{"size":283,"mtime":1655441254000,"results":"57","hashOfConfig":"43"},{"size":525,"mtime":1714932164259,"results":"58","hashOfConfig":"43"},{"size":693,"mtime":1655441254000,"results":"59","hashOfConfig":"43"},{"size":1505,"mtime":1655441254000,"results":"60","hashOfConfig":"43"},{"size":4802,"mtime":1655441254000,"results":"61","hashOfConfig":"43"},{"size":2219,"mtime":1655441254000,"results":"62","hashOfConfig":"43"},{"size":461,"mtime":1714931434968,"results":"63","hashOfConfig":"43"},{"size":364,"mtime":1655441254000,"results":"64","hashOfConfig":"43"},{"size":245,"mtime":1724398109478,"results":"65","hashOfConfig":"43"},{"size":655,"mtime":1724343898302,"results":"66","hashOfConfig":"43"},{"size":276,"mtime":1724343863334,"results":"67","hashOfConfig":"43"},{"size":501,"mtime":1655441254000,"results":"68","hashOfConfig":"43"},{"size":1141,"mtime":1655441254000,"results":"69","hashOfConfig":"43"},{"size":890,"mtime":1655441254000,"results":"70","hashOfConfig":"43"},{"size":589,"mtime":1655441254000,"results":"71","hashOfConfig":"43"},{"size":3044,"mtime":1714931950396,"results":"72","hashOfConfig":"43"},{"size":2239,"mtime":1655441254000,"results":"73","hashOfConfig":"43"},{"size":373,"mtime":1655441254000,"results":"74","hashOfConfig":"43"},{"size":315,"mtime":1724390757375,"results":"75","hashOfConfig":"43"},{"size":574,"mtime":1655441254000,"results":"76","hashOfConfig":"43"},{"size":631,"mtime":1655441254000,"results":"77","hashOfConfig":"43"},{"size":1361,"mtime":1655441254000,"results":"78","hashOfConfig":"43"},{"size":1425,"mtime":1655441254000,"results":"79","hashOfConfig":"43"},{"size":4258,"mtime":1655441254000,"results":"80","hashOfConfig":"43"},{"size":466,"mtime":1724343882450,"results":"81","hashOfConfig":"43"},{"size":440,"mtime":1724343891837,"results":"82","hashOfConfig":"43"},{"size":703,"mtime":1655441254000,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},"1nxgbrb",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"88"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"88"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\try\\final\\Social media\\project\\client\\src\\index.js",["220"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./store/ReduxStore\";\nimport App from \"./App\";\n\n// stack overflow\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"*\" element={<App />} />\n        </Routes>\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["221","222"],"D:\\try\\final\\Social media\\project\\client\\src\\App.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\store\\ReduxStore.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\pages\\Home.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\pages\\Auth\\Auth.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\pages\\Chat\\Chat.jsx",["223"],[],"import React, { useRef, useState } from \"react\";\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\nimport Conversation from \"../../components/Coversation/Conversation\";\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\";\nimport NavIcons from \"../../components/NavIcons/NavIcons\";\nimport \"./Chat.css\";\nimport { useEffect } from \"react\";\nimport { userChats } from \"../../api/ChatRequests\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const socket = useRef();\n  const { user } = useSelector((state) => state.authReducer.authData);\n\n  const [chats, setChats] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [sendMessage, setSendMessage] = useState(null);\n  const [receivedMessage, setReceivedMessage] = useState(null);\n  // Get the chat in chat section\n  useEffect(() => {\n    const getChats = async () => {\n      try {\n        const { data } = await userChats(user._id);\n        setChats(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getChats();\n  }, [user._id]);\n\n  // Connect to Socket.io\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8800\");\n    socket.current.emit(\"new-user-add\", user._id);\n    socket.current.on(\"get-users\", (users) => {\n      setOnlineUsers(users);\n    });\n  }, [user]);\n\n  // Send Message to socket server\n  useEffect(() => {\n    if (sendMessage!==null) {\n      socket.current.emit(\"send-message\", sendMessage);}\n  }, [sendMessage]);\n\n\n  // Get the message from socket server\n  useEffect(() => {\n    socket.current.on(\"recieve-message\", (data) => {\n      console.log(data)\n      setReceivedMessage(data);\n    }\n\n    );\n  }, []);\n\n\n  const checkOnlineStatus = (chat) => {\n    const chatMember = chat.members.find((member) => member !== user._id);\n    const online = onlineUsers.find((user) => user.userId === chatMember);\n    return online ? true : false;\n  };\n\n  return (\n    <div className=\"Chat\">\n      {/* Left Side */}\n      <div className=\"Left-side-chat\">\n        <LogoSearch />\n        <div className=\"Chat-container\">\n          <h2>Chats</h2>\n          <div className=\"Chat-list\">\n            {chats.map((chat) => (\n              <div\n                onClick={() => {\n                  setCurrentChat(chat);\n                }}\n              >\n                <Conversation\n                  data={chat}\n                  currentUser={user._id}\n                  online={checkOnlineStatus(chat)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Right Side */}\n\n      <div className=\"Right-side-chat\">\n        <div style={{ width: \"20rem\", alignSelf: \"flex-end\" }}>\n          <NavIcons />\n        </div>\n        <ChatBox\n          chat={currentChat}\n          currentUser={user._id}\n          setSendMessage={setSendMessage}\n          receivedMessage={receivedMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","D:\\try\\final\\Social media\\project\\client\\src\\pages\\Profile\\Profile.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\reducers\\index.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\actions\\AuthActions.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\api\\ChatRequests.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\reducers\\PostReducer.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\reducers\\AuthReducer.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\reducers\\ChatUserReducer.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\profileSide\\ProfileSide.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\PostSide\\PostSide.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\NavIcons\\NavIcons.jsx",["224","225"],[],"import React from \"react\";\n\nimport Home from \"../../img/home.png\";\nimport Noti from \"../../img/noti.png\";\nimport Comment from \"../../img/comment.png\";\nimport { UilSetting } from \"@iconscout/react-unicons\";\nimport { Link } from \"react-router-dom\";\n\nconst NavIcons = () => {\n  return (\n    <div className=\"navIcons\">\n      <Link to=\"../home\">\n        <img src={Home} alt=\"\" />\n      </Link>\n      \n      \n      <Link to=\"../chat\">\n        <img src={Comment} alt=\"\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default NavIcons;\n","D:\\try\\final\\Social media\\project\\client\\src\\components\\RightSide\\RightSide.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\Coversation\\Conversation.jsx",["226"],[],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"../../api/UserRequests\";\nconst Conversation = ({ data, currentUser, online }) => {\n\n  const [userData, setUserData] = useState(null)\n  const dispatch = useDispatch()\n\n  useEffect(()=> {\n\n    const userId = data.members.find((id)=>id!==currentUser)\n    const getUserData = async ()=> {\n      try\n      {\n          const {data} =await getUser(userId)\n         setUserData(data)\n         dispatch({type:\"SAVE_USER\", data:data})\n      }\n      catch(error)\n      {\n        console.log(error)\n      }\n    }\n\n    getUserData();\n  }, [])\n  return (\n    <>\n      <div className=\"follower conversation\">\n        <div>\n          {online && <div className=\"online-dot\"></div>}\n          <img\n            src={userData?.profilePicture? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : process.env.REACT_APP_PUBLIC_FOLDER + \"defaultProfile.png\"}\n            alt=\"Profile\"\n            className=\"followerImage\"\n            style={{ width: \"50px\", height: \"50px\" }}\n          />\n          <div className=\"name\" style={{fontSize: '0.8rem'}}>\n            <span>{userData?.firstname} {userData?.lastname}</span>\n            <span style={{color: online?\"#51e200\":\"\"}}>{online? \"Online\" : \"Offline\"}</span>\n          </div>\n        </div>\n      </div>\n      <hr style={{ width: \"85%\", border: \"0.1px solid #ececec\" }} />\n    </>\n  );\n};\n\nexport default Conversation;\n","D:\\try\\final\\Social media\\project\\client\\src\\components\\ChatBox\\ChatBox.jsx",["227"],[],"import React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { addMessage, getMessages } from \"../../api/MessageRequests\";\nimport { getUser } from \"../../api/UserRequests\";\nimport \"./ChatBox.css\";\nimport { format } from \"timeago.js\";\nimport InputEmoji from 'react-input-emoji'\n\nconst ChatBox = ({ chat, currentUser, setSendMessage,  receivedMessage }) => {\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  const handleChange = (newMessage)=> {\n    setNewMessage(newMessage)\n  }\n\n  // fetching data for header\n  useEffect(() => {\n    const userId = chat?.members?.find((id) => id !== currentUser);\n    const getUserData = async () => {\n      try {\n        const { data } = await getUser(userId);\n        setUserData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (chat !== null) getUserData();\n  }, [chat, currentUser]);\n\n  // fetch messages\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const { data } = await getMessages(chat._id);\n        setMessages(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (chat !== null) fetchMessages();\n  }, [chat]);\n\n\n  // Always scroll to last Message\n  useEffect(()=> {\n    scroll.current?.scrollIntoView({ behavior: \"smooth\" });\n  },[messages])\n\n\n\n  // Send Message\n  const handleSend = async(e)=> {\n    e.preventDefault()\n    const message = {\n      senderId : currentUser,\n      text: newMessage,\n      chatId: chat._id,\n  }\n  const receiverId = chat.members.find((id)=>id!==currentUser);\n  // send message to socket server\n  setSendMessage({...message, receiverId})\n  // send message to database\n  try {\n    const { data } = await addMessage(message);\n    setMessages([...messages, data]);\n    setNewMessage(\"\");\n  }\n  catch\n  {\n    console.log(\"error\")\n  }\n}\n\n// Receive Message from parent component\nuseEffect(()=> {\n  console.log(\"Message Arrived: \", receivedMessage)\n  if (receivedMessage !== null && receivedMessage.chatId === chat._id) {\n    setMessages([...messages, receivedMessage]);\n  }\n\n},[receivedMessage])\n\n\n\n  const scroll = useRef();\n  const imageRef = useRef();\n  return (\n    <>\n      <div className=\"ChatBox-container\">\n        {chat ? (\n          <>\n            {/* chat-header */}\n            <div className=\"chat-header\">\n              <div className=\"follower\">\n                <div>\n                  <img\n                    src={\n                      userData?.profilePicture\n                        ? process.env.REACT_APP_PUBLIC_FOLDER +\n                          userData.profilePicture\n                        : process.env.REACT_APP_PUBLIC_FOLDER +\n                          \"defaultProfile.png\"\n                    }\n                    alt=\"Profile\"\n                    className=\"followerImage\"\n                    style={{ width: \"50px\", height: \"50px\" }}\n                  />\n                  <div className=\"name\" style={{ fontSize: \"0.9rem\" }}>\n                    <span>\n                      {userData?.firstname} {userData?.lastname}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <hr\n                style={{\n                  width: \"95%\",\n                  border: \"0.1px solid #ececec\",\n                  marginTop: \"20px\",\n                }}\n              />\n            </div>\n            {/* chat-body */}\n            <div className=\"chat-body\" >\n              {messages.map((message) => (\n                <>\n                  <div ref={scroll}\n                    className={\n                      message.senderId === currentUser\n                        ? \"message own\"\n                        : \"message\"\n                    }\n                  >\n                    <span>{message.text}</span>{\" \"}\n                    <span>{format(message.createdAt)}</span>\n                  </div>\n                </>\n              ))}\n            </div>\n            {/* chat-sender */}\n            <div className=\"chat-sender\">\n              <div onClick={() => imageRef.current.click()}>+</div>\n              <InputEmoji\n                value={newMessage}\n                onChange={handleChange}\n              />\n              <div className=\"send-button button\" onClick = {handleSend}>Send</div>\n              <input\n                type=\"file\"\n                name=\"\"\n                id=\"\"\n                style={{ display: \"none\" }}\n                ref={imageRef}\n              />\n            </div>{\" \"}\n          </>\n        ) : (\n          <span className=\"chatbox-empty-message\">\n            Tap on a chat to start conversation...\n          </span>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ChatBox;\n","D:\\try\\final\\Social media\\project\\client\\src\\components\\ProfileCard\\ProfileCard.jsx",["228","229"],[],"import React from \"react\";\nimport \"./ProfileCard.css\";\nimport Cover from \"../../img/cover.jpg\";\nimport Profile from \"../../img/profileImg.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nconst ProfileCard = ({location}) => {\n  const { user } = useSelector((state) => state.authReducer.authData);\n  const posts = useSelector((state)=>state.postReducer.posts)\n  const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  return (\n    <div className=\"ProfileCard\">\n      <div className=\"ProfileImages\">\n        <img src={\n            user.coverPicture\n              ? serverPublic + user.coverPicture\n              : serverPublic + \"defaultCover.jpg\"\n          } alt=\"CoverImage\" />\n        <img\n          src={\n            user.profilePicture\n              ? serverPublic + user.profilePicture\n              : serverPublic + \"defaultProfile.png\"\n          }\n          alt=\"ProfileImage\"\n        />\n      </div>\n      <div className=\"ProfileName\">\n        <span>{user.firstname} {user.lastname}</span>\n        <span>{user.worksAt? user.worksAt : 'Write about yourself'}</span>\n      </div>\n\n      <div className=\"followStatus\">\n        <hr />\n        <div>\n          <div className=\"follow\">\n            <span>{user.followers.length}</span>\n            <span>Followers</span>\n          </div>\n          <div className=\"vl\"></div>\n          <div className=\"follow\">\n            <span>{user.following.length}</span>\n            <span>Following</span>\n          </div>\n          {/* for profilepage */}\n          {location === \"profilePage\" && (\n            <>\n              <div className=\"vl\"></div>\n              <div className=\"follow\">\n                <span>{\n                posts.filter((post)=>post.userId === user._id).length\n                }</span>\n                <span>Posts</span>\n              </div>{\" \"}\n            </>\n          )}\n        </div>\n        <hr />\n      </div>\n\n      {location === \"profilePage\" ? (\n        \"\"\n      ) : (\n        <span>\n          <Link to={`/profile/${user._id}`} style={{ textDecoration: \"none\", color: \"inherit\" }}>\n            My Profile\n          </Link>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileCard;\n","D:\\try\\final\\Social media\\project\\client\\src\\components\\LogoSearch\\LogoSearch.jsx",["230"],[],"import React from \"react\";\nimport Logo from \"../../img/logo.png\";\nimport './LogoSearch.css'\nimport { UilSearch } from '@iconscout/react-unicons'\nconst LogoSearch = () => {\n  return (\n    <div className=\"LogoSearch\">\n      <img src={Logo} alt=\"\" />\n      <div className=\"Search\">\n          <input type=\"text\" placeholder=\"#Explore\"/>\n          <div className=\"s-icon\">\n                \n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LogoSearch;","D:\\try\\final\\Social media\\project\\client\\src\\components\\ProfileLeft\\ProfileLeft.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\api\\AuthRequests.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\api\\UserRequests.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\api\\MessageRequests.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\TrendCard\\TrendCard.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\FollowersCard\\FollowersCard.jsx",["231"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./FollowersCard.css\";\nimport FollowersModal from \"../FollowersModal/FollowersModal\";\nimport { getAllUser } from \"../../api/UserRequests\";\nimport User from \"../User/User\";\nimport { useSelector } from \"react-redux\";\nconst FollowersCard = ({ location }) => {\n  const [modalOpened, setModalOpened] = useState(false);\n  const [persons, setPersons] = useState([]);\n  const { user } = useSelector((state) => state.authReducer.authData);\n\n  useEffect(() => {\n    const fetchPersons = async () => {\n      const { data } = await getAllUser();\n      setPersons(data);\n    };\n    fetchPersons();\n  }, []);\n\n  return (\n    <div className=\"FollowersCard\">\n      <h3>People you may know</h3>\n\n      {persons.map((person, id) => {\n        if (person._id !== user._id) return <User person={person} key={id} />;\n      })}\n      {!location ? (\n        <span onClick={() => setModalOpened(true)}>Show more</span>\n      ) : (\n        \"\"\n      )}\n\n      <FollowersModal\n        modalOpened={modalOpened}\n        setModalOpened={setModalOpened}\n      />\n    </div>\n  );\n};\n\nexport default FollowersCard;\n","D:\\try\\final\\Social media\\project\\client\\src\\components\\Posts\\Posts.jsx",["232"],[],"import React, { useEffect } from \"react\";\nimport { getTimelinePosts } from \"../../actions/PostsAction\";\nimport Post from \"../Post/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Posts.css\";\nimport { useParams } from \"react-router-dom\";\n\nconst Posts = () => {\n  const params = useParams()\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.authReducer.authData);\n  let { posts, loading } = useSelector((state) => state.postReducer);\n  useEffect(() => {\n    dispatch(getTimelinePosts(user._id));\n  }, []);\n  if(!posts) return 'No Posts';\n  if(params.id) posts = posts.filter((post)=> post.userId===params.id)\n  return (\n    <div className=\"Posts\">\n      {loading\n        ? \"Fetching posts....\"\n        : posts.map((post, id) => {\n            return <Post data={post} key={id} />;\n          })}\n    </div>\n  );\n};\n\nexport default Posts;\n","D:\\try\\final\\Social media\\project\\client\\src\\components\\ShareModal\\ShareModal.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\PostShare\\PostShare.jsx",["233","234","235"],[],"import React, { useState, useRef } from \"react\";\nimport \"./PostShare.css\";\nimport { UilScenery } from \"@iconscout/react-unicons\";\nimport { UilPlayCircle } from \"@iconscout/react-unicons\";\nimport { UilLocationPoint } from \"@iconscout/react-unicons\";\nimport { UilSchedule } from \"@iconscout/react-unicons\";\nimport { UilTimes } from \"@iconscout/react-unicons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uploadImage, uploadPost } from \"../../actions/UploadAction\";\n\nconst PostShare = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.authReducer.authData);\n  const loading = useSelector((state) => state.postReducer.uploading);\n  const [image, setImage] = useState(null);\n  const desc = useRef();\n  const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  // handle Image Change\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      setImage(img);\n    }\n  };\n\n  const imageRef = useRef();\n\n  // handle post upload\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    //post data\n    const newPost = {\n      userId: user._id,\n      desc: desc.current.value,\n    };\n\n    // if there is an image with post\n    if (image) {\n      const data = new FormData();\n      const fileName = Date.now() + image.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", image);\n      newPost.image = fileName;\n      console.log(newPost);\n      try {\n        dispatch(uploadImage(data));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    dispatch(uploadPost(newPost));\n    resetShare();\n  };\n\n  // Reset Post Share\n  const resetShare = () => {\n    setImage(null);\n    desc.current.value = \"\";\n  };\n  return (\n    <div className=\"PostShare\">\n      <img\n        src={\n          user.profilePicture\n            ? serverPublic + user.profilePicture\n            : serverPublic + \"defaultProfile.png\"\n        }\n        alt=\"Profile\"\n      />\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"What's happening?\"\n          required\n          ref={desc}\n        />\n        <div className=\"postOptions\">\n          <div\n            className=\"option\"\n            style={{ color: \"var(--photo)\" }}\n            onClick={() => imageRef.current.click()}\n          >\n            <UilScenery />\n            Photo\n          </div>\n\n          \n          <button\n            className=\"button ps-button\"\n            onClick={handleUpload}\n            disabled={loading}\n          >\n            {loading ? \"uploading\" : \"Share\"}\n          </button>\n\n          <div style={{ display: \"none\" }}>\n            <input type=\"file\" ref={imageRef} onChange={onImageChange} />\n          </div>\n        </div>\n\n        {image && (\n          <div className=\"previewImage\">\n            <UilTimes onClick={() => setImage(null)} />\n            <img src={URL.createObjectURL(image)} alt=\"preview\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PostShare;\n","D:\\try\\final\\Social media\\project\\client\\src\\components\\InfoCard\\InfoCard.jsx",["236"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./InfoCard.css\";\nimport { UilPen } from \"@iconscout/react-unicons\";\nimport ProfileModal from \"../ProfileModal/ProfileModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport * as UserApi from \"../../api/UserRequests.js\";\nimport { logout } from \"../../actions/AuthActions\";\n\nconst InfoCard = () => {\n  const dispatch = useDispatch()\n  const params = useParams();\n  const [modalOpened, setModalOpened] = useState(false);\n  const profileUserId = params.id;\n  const [profileUser, setProfileUser] = useState({});\n  const { user } = useSelector((state) => state.authReducer.authData);\n\n\n  const handleLogOut = ()=> {\n    dispatch(logout())\n  }\n\n\n  useEffect(() => {\n    const fetchProfileUser = async () => {\n      if (profileUserId === user._id) {\n        setProfileUser(user);\n      } else {\n        console.log(\"fetching\")\n        const profileUser = await UserApi.getUser(profileUserId);\n        setProfileUser(profileUser);\n        console.log(profileUser)\n      }\n    };\n    fetchProfileUser();\n  }, [user]);\n\n  return (\n    <div className=\"InfoCard\">\n      <div className=\"infoHead\">\n        <h4>Profile Info</h4>\n        {user._id === profileUserId ? (\n          <div>\n            <UilPen\n              width=\"2rem\"\n              height=\"1.2rem\"\n              onClick={() => setModalOpened(true)}\n            />\n            <ProfileModal\n              modalOpened={modalOpened}\n              setModalOpened={setModalOpened}\n              data = {user}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className=\"info\">\n        {/* */}\n        <span>\n          <b>Status </b>\n        </span>\n        <span>{profileUser.relationship}</span>\n      </div>\n      <div className=\"info\">\n        <span>\n          <b>Lives in </b>\n        </span>\n        <span>{profileUser.livesIn}</span>\n      </div>\n      <div className=\"info\">\n        <span>\n          <b>Works at </b>\n        </span>\n        <span>{profileUser.worksAt}</span>\n      </div>\n\n      <button className=\"button logout-button\" onClick={handleLogOut}>Log Out</button>\n    </div>\n  );\n};\n\nexport default InfoCard;\n","D:\\try\\final\\Social media\\project\\client\\src\\actions\\PostsAction.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\Data\\TrendData.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\actions\\UploadAction.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\FollowersModal\\FollowersModal.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\User\\User.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\Post\\Post.jsx",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\components\\ProfileModal\\ProfileModal.jsx",["237"],[],"import React, { useState } from \"react\";\nimport { Modal, useMantineTheme } from \"@mantine/core\";\nimport \"./ProfileModal.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { uploadImage } from \"../../actions/UploadAction\";\nimport { updateUser } from \"../../actions/UserAction\";\n\nconst ProfileModal = ({ modalOpened, setModalOpened, data }) => {\n  const theme = useMantineTheme();\n  const { password, ...other } = data;\n  const [formData, setFormData] = useState(other);\n  const [profileImage, setProfileImage] = useState(null);\n  const [coverImage, setCoverImage] = useState(null);\n  const dispatch = useDispatch();\n  const param = useParams();\n\n  const { user } = useSelector((state) => state.authReducer.authData);\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      event.target.name === \"profileImage\"\n        ? setProfileImage(img)\n        : setCoverImage(img);\n    }\n  };\n\n  // form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let UserData = formData;\n    if (profileImage) {\n      const data = new FormData();\n      const fileName = Date.now() + profileImage.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", profileImage);\n      UserData.profilePicture = fileName;\n      try {\n        dispatch(uploadImage(data));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (coverImage) {\n      const data = new FormData();\n      const fileName = Date.now() + coverImage.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", coverImage);\n      UserData.coverPicture = fileName;\n      try {\n        dispatch(uploadImage(data));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    dispatch(updateUser(param.id, UserData));\n    setModalOpened(false);\n  };\n\n  return (\n    <Modal\n      overlayColor={\n        theme.colorScheme === \"dark\"\n          ? theme.colors.dark[9]\n          : theme.colors.gray[2]\n      }\n      overlayOpacity={0.55}\n      overlayBlur={3}\n      size=\"55%\"\n      opened={modalOpened}\n      onClose={() => setModalOpened(false)}\n    >\n      <form className=\"infoForm\" onSubmit={handleSubmit}>\n        <h3>Your Info</h3>\n        <div>\n          <input\n            value={formData.firstname}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"First Name\"\n            name=\"firstname\"\n            className=\"infoInput\"\n          />\n          <input\n            value={formData.lastname}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Last Name\"\n            name=\"lastname\"\n            className=\"infoInput\"\n          />\n        </div>\n\n        <div>\n          <input\n            value={formData.worksAt}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Works at\"\n            name=\"worksAt\"\n            className=\"infoInput\"\n          />\n        </div>\n\n        <div>\n          <input\n            value={formData.livesIn}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Lives in\"\n            name=\"livesIn\"\n            className=\"infoInput\"\n          />\n          <input\n            value={formData.country}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Country\"\n            name=\"country\"\n            className=\"infoInput\"\n          />\n        </div>\n\n        <div>\n          <input\n            value={formData.relationship}\n            onChange={handleChange}\n            type=\"text\"\n            className=\"infoInput\"\n            placeholder=\"Relationship status\"\n            name=\"relationship\"\n          />\n        </div>\n\n        <div>\n          Profile image\n          <input type=\"file\" name=\"profileImage\" onChange={onImageChange} />\n          Cover image\n          <input type=\"file\" name=\"coverImage\" onChange={onImageChange} />\n        </div>\n\n        <button className=\"button infoButton\" type=\"submit\">\n          Update\n        </button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default ProfileModal;\n","D:\\try\\final\\Social media\\project\\client\\src\\api\\PostsRequests.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\api\\UploadRequest.js",[],[],"D:\\try\\final\\Social media\\project\\client\\src\\actions\\UserAction.js",[],[],{"ruleId":"238","severity":1,"message":"239","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":21},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"238","severity":1,"message":"246","line":13,"column":9,"nodeType":"240","messageId":"241","endLine":13,"endColumn":17},{"ruleId":"238","severity":1,"message":"247","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":12},{"ruleId":"238","severity":1,"message":"248","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":20},{"ruleId":"249","severity":1,"message":"250","line":27,"column":6,"nodeType":"251","endLine":27,"endColumn":8,"suggestions":"252"},{"ruleId":"249","severity":1,"message":"253","line":85,"column":3,"nodeType":"251","endLine":85,"endColumn":20,"suggestions":"254"},{"ruleId":"238","severity":1,"message":"255","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":13},{"ruleId":"238","severity":1,"message":"256","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":15},{"ruleId":"238","severity":1,"message":"257","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":24,"column":33,"nodeType":"260","messageId":"261","endLine":24,"endColumn":35},{"ruleId":"249","severity":1,"message":"262","line":15,"column":6,"nodeType":"251","endLine":15,"endColumn":8,"suggestions":"263"},{"ruleId":"238","severity":1,"message":"264","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":23},{"ruleId":"238","severity":1,"message":"265","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":26},{"ruleId":"238","severity":1,"message":"266","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":21},{"ruleId":"249","severity":1,"message":"267","line":36,"column":6,"nodeType":"251","endLine":36,"endColumn":12,"suggestions":"268"},{"ruleId":"238","severity":1,"message":"269","line":18,"column":11,"nodeType":"240","messageId":"241","endLine":18,"endColumn":15},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","no-native-reassign",["270"],"no-negated-in-lhs",["271"],"'dispatch' is assigned a value but never used.","'Noti' is defined but never used.","'UilSetting' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'data.members', and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["272"],"React Hook useEffect has missing dependencies: 'chat._id' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["273"],"'Cover' is defined but never used.","'Profile' is defined but never used.","'UilSearch' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'dispatch' and 'user._id'. Either include them or remove the dependency array.",["274"],"'UilPlayCircle' is defined but never used.","'UilLocationPoint' is defined but never used.","'UilSchedule' is defined but never used.","React Hook useEffect has a missing dependency: 'profileUserId'. Either include it or remove the dependency array.",["275"],"'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [currentUser, data.members, dispatch]",{"range":"284","text":"285"},"Update the dependencies array to be: [chat._id, messages, receivedMessage]",{"range":"286","text":"287"},"Update the dependencies array to be: [dispatch, user._id]",{"range":"288","text":"289"},"Update the dependencies array to be: [profileUserId, user]",{"range":"290","text":"291"},[670,672],"[currentUser, data.members, dispatch]",[2175,2192],"[chat._id, messages, receivedMessage]",[555,557],"[dispatch, user._id]",[1120,1126],"[profileUserId, user]"]